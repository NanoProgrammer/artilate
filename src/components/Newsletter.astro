---
/* src/components/Newsletter.astro
   Netlify setup:
   - This static form will be detected by Netlify at build time.
   - It posts to Netlify and then redirects to /thank-you (make sure that page exists).
*/
---
<section
  id="newsletter"
  class="relative overflow-hidden bg-neutral-900 text-neutral-100 py-16 lg:py-20
         bg-[radial-gradient(1100px_380px_at_85%_120%,rgba(245,158,11,0.08),transparent)]
         bg-no-repeat"
>
  <!-- ambient gold glows -->
  <div aria-hidden="true" class="pointer-events-none absolute inset-0">
    <div class="absolute -top-28 -right-24 h-72 w-72 rounded-full bg-amber-500/10 blur-3xl"></div>
    <div class="absolute bottom-0 left-10 h-44 w-44 rounded-full bg-amber-500/10 blur-2xl"></div>
  </div>

  <div class="relative z-10 mx-auto max-w-5xl px-6 lg:px-8">
    <!-- header -->
    <header class="mx-auto max-w-2xl text-center">
      <span class="inline-flex items-center gap-2 rounded-full border border-amber-500/20 bg-amber-500/10 px-4 py-1.5 text-amber-300 font-semibold text-xs tracking-wide reveal-up">
        <svg aria-hidden="true" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 3l2.6 5.2 5.8.8-4.2 4.1 1 5.8-5.2-2.7-5.2 2.7 1-5.8L3.6 9.3l5.8-.8L12 3z"/></svg>
        Consciously Made
      </span>
      <h2 class="mt-3 font-serif text-4xl lg:text-5xl font-bold leading-tight reveal-up" style="--d:1">Join the Artilate List</h2>
      <p class="mt-3 text-neutral-300 reveal-up" style="--d:2">Small-batch drops, early tastings, and limited releases. No spam.</p>
    </header>

    <!-- form card -->
    <div class="mt-8 rounded-2xl border border-amber-500/15 bg-black/30 backdrop-blur-md p-6 sm:p-8 reveal-up" style="--d:3">
      <!-- Netlify form -->
      <form
        name="artilate-newsletter"
        method="POST"
        data-netlify="true"
        netlify-honeypot="bot-field"
        action="/thank-you"
        class="mx-auto grid max-w-2xl gap-4 sm:grid-cols-[1fr_auto]"
      >
        <!-- Required hidden input for Netlify -->
        <input type="hidden" name="form-name" value="artilate-newsletter" />
        <!-- Honey-pot (hidden to users) -->
        <p class="hidden">
          <label>Don’t fill this out if you’re human: <input name="bot-field" /></label>
        </p>

        <label for="email" class="sr-only">Email address</label>
        <div class="flex items-center rounded-xl border border-amber-500/20 bg-black/40 px-3 py-2.5 focus-within:border-amber-400/40 reveal-left" style="--d:4">
          <svg aria-hidden="true" width="18" height="18" viewBox="0 0 24 24" class="text-amber-300">
            <path fill="none" stroke="currentColor" stroke-width="2" d="M4 6h16v12H4zM4 7l8 6 8-6"/>
          </svg>
          <input
            id="email"
            name="email"
            type="email"
            required
            autocomplete="email"
            placeholder="you@domain.com"
            class="ml-2 w-full bg-transparent text-neutral-100 placeholder:text-neutral-400 outline-none"
          />
        </div>

        <!-- Button with true-hidden sheen (only on hover) -->
        <button
          type="submit"
          class="group relative inline-flex items-center justify-center overflow-hidden rounded-xl
                 bg-gradient-to-r from-amber-500 to-amber-600 px-6 py-2.5 font-semibold text-neutral-900
                 shadow-[0_10px_30px_-10px_rgba(245,158,11,0.45)]
                 transition-transform hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-amber-400/60 reveal-right"
          style="--d:4"
          aria-label="Subscribe to newsletter"
        >
          <span>Subscribe</span>
          <!-- sheen -->
          <span
            aria-hidden="true"
            class="pointer-events-none absolute inset-0 left-[-120%] opacity-0
                   bg-gradient-to-r from-transparent via-white/20 to-transparent
                   skew-x-12 transition-all duration-700
                   group-hover:left-[120%] group-hover:opacity-100"
          />
        </button>

        <p class="sm:col-span-2 text-xs text-neutral-400 reveal-up" style="--d:5">
          By subscribing you agree to receive occasional emails. Unsubscribe anytime.
        </p>
      </form>
    </div>
  </div>

  <!-- decorative gold flourish (inspired by your reference) -->
  <svg aria-hidden="true" class="pointer-events-none absolute bottom-0 left-0 w-[1200px] opacity-60 reveal-up" style="--d:6" viewBox="0 0 1200 240" fill="none">
    <defs>
      <linearGradient id="goldStroke" x1="0" y1="0" x2="1" y2="0">
        <stop offset="0%" stop-color="#D4A373"/>
        <stop offset="50%" stop-color="#E6B06A"/>
        <stop offset="100%" stop-color="#F59E0B"/>
      </linearGradient>
      <filter id="softGlow" x="-20%" y="-20%" width="140%" height="140%">
        <feGaussianBlur stdDeviation="2" result="blur"/>
        <feMerge><feMergeNode in="blur"/><feMergeNode in="SourceGraphic"/></feMerge>
      </filter>
    </defs>
    <path d="M10 170 C 160 120, 320 70, 520 90 S 900 210, 1080 100" stroke="url(#goldStroke)" stroke-width="3.5" stroke-linecap="round" filter="url(#softGlow)"/>
    <path d="M140 178 C 300 140, 480 118, 640 140" stroke="url(#goldStroke)" stroke-width="2" stroke-linecap="round" opacity=".7"/>
    <path d="M1040 120 q 70 20 100 60 a 46 46 0 1 1 -74 -36" stroke="url(#goldStroke)" stroke-width="3" stroke-linecap="round" fill="none"/>
  </svg>
</section>

<style is:global>
  /* Revels globales coherentes con el sitio */
  :root{ --ease:cubic-bezier(.16,1,.3,1); }
  .reveal-up,.reveal-left,.reveal-right{
    opacity:0;
    will-change:transform,opacity,filter;
    transition:opacity .7s var(--ease),transform .7s var(--ease),filter .7s var(--ease);
    transition-delay:calc(var(--d,0)*90ms);
    filter:blur(2px);
  }
  .reveal-up{ transform:translateY(18px) scale(.985); }
  .reveal-left{ transform:translateX(-22px); }
  .reveal-right{ transform:translateX(22px); }
  .is-visible{ opacity:1; transform:none; filter:none; }
</style>

<script is:inline>
  // Scroll reveal (mismo patrón del resto del sitio)
  (function initReveals(){
    const root = document.getElementById('newsletter');
    if (!root) return;
    const els = root.querySelectorAll('.reveal-up, .reveal-left, .reveal-right');
    if (!els.length) return;

    const io = new IntersectionObserver((entries) => {
      for (const e of entries) {
        if (e.isIntersecting) {
          e.target.classList.add('is-visible');
          io.unobserve(e.target);
        }
      }
    }, { threshold: 0.12, rootMargin: '0px 0px -8% 0px' });

    els.forEach(el => io.observe(el));
  })();
</script>
