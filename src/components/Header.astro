---
interface NavItem {
  href: string;
  label: string;
  hasDropdown?: boolean;
  dropdownItems?: NavItem[];
}

// Desktop primary nav (Contact CTA; Cart icon-only, NO counter)
const navItems: NavItem[] = [
  { 
    href: "/about", 
    label: "About",
    hasDropdown: true,
    dropdownItems: [
      { href: "/about", label: "Our Story" },
      { href: "/about/process", label: "Bean-to-Bar Process" },
      { href: "/about/sustainability", label: "Sustainability" },
      { href: "/contact", label: "Contact" },
    ]
  },
  { href: "/testimonial", label: "Testimonial" },
  { href: "/journal", label: "Journal" },
  { href: "/find-us", label: "Find Us" },
  { href: "/wholesale", label: "Wholesale" },
  { href: "/events", label: "Events" },
];

// Mobile list (cart via header icon)
const navItemsResponsive: NavItem[] = [
  { href: "/about", label: "About" },
  { href: "/contact", label: "Contact" },
  { href: "/journal", label: "Journal" },
  { href: "/find-us", label: "Find Us" },
  { href: "/wholesale", label: "Wholesale" },
  { href: "/events", label: "Events" },
];
---

<header class="header" id="header">
  <div class="container">
    <nav class="nav-container">
      <a href="/" class="logo">
        <span class="logo-text">Artilate</span>
      </a>

      <div class="nav-menu" id="nav-menu">
        <ul class="nav-links">
          {navItems.map(item => (
            <li class="nav-item">
              <a href={item.href} class="nav-link">
                {item.label}
                {item.hasDropdown && (
                  <svg class="dropdown-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="6,9 12,15 18,9"></polyline>
                  </svg>
                )}
              </a>
              {item.hasDropdown && item.dropdownItems && (
                <div class="dropdown-menu">
                  <ul class="dropdown-list">
                    {item.dropdownItems.map(dropItem => (
                      <li>
                        <a href={dropItem.href} class="dropdown-link">{dropItem.label}</a>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </li>
          ))}
        </ul>

        <!-- Right-side actions: Contact + Cart (icon-only, NO count) -->
        <div class="nav-actions">
          <a href="/shop" class="contact-btn" aria-label="Contact">
        
            <span>Shop Now</span>
          </a>

          <a href="/cart" class="cart-icon-link" aria-label="Open cart">
            <svg class="cart-icon" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
              <circle cx="9" cy="21" r="1"/><circle cx="20" cy="21" r="1"/>
              <path d="M1 1h4l2.68 12.39A2 2 0 0 0 9.62 15H19a2 2 0 0 0 2-1.65l1.38-7.6H5.12"/>
            </svg>
            <span class="sr-only">Cart</span>
          </a>
        </div>
      </div>

      <button class="mobile-toggle" id="mobile-toggle" aria-label="Toggle navigation menu" aria-controls="mobile-menu" aria-expanded="false">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </nav>
  </div>

  <!-- Mobile Menu Overlay -->
  <div class="mobile-menu" id="mobile-menu" aria-hidden="true">
    <div class="mobile-menu-content">
      <ul class="mobile-nav-links">
        {navItemsResponsive.map(item => (
          <li class="mobile-nav-item">
            <a href={item.href} class="mobile-nav-link">{item.label}</a>
            {item.hasDropdown && item.dropdownItems && (
              <div class="mobile-dropdown">
                {item.dropdownItems.map(dropItem => (
                  <a href={dropItem.href} class="mobile-dropdown-link">{dropItem.label}</a>
                ))}
              </div>
            )}
          </li>
        ))}
        <li style="margin-top:1.25rem;">
          <a href="/shop" class="mobile-contact-btn">Shop</a>
        </li>
      </ul>
    </div>
  </div>
</header>

<style>
  .header { position: fixed; top: 0; left: 0; right: 0; z-index: 1000; background: rgba(10, 11, 13, 0.85); backdrop-filter: blur(32px) saturate(180%); border-bottom: 1px solid rgba(212, 163, 115, 0.08); transition: all 0.5s cubic-bezier(0.16, 1, 0.3, 1); box-shadow: 0 1px 0 rgba(212, 163, 115, 0.05); }
  .header.scrolled { background: rgba(10, 11, 13, 0.95); border-bottom: 1px solid rgba(212, 163, 115, 0.15); box-shadow: 0 1px 0 rgba(212, 163, 115, 0.08), 0 8px 40px rgba(0, 0, 0, 0.25), 0 2px 16px rgba(0, 0, 0, 0.15); }
  @media (max-width: 768px) { .header { background: #0A0B0D !important; backdrop-filter: none !important; } }

  .container { max-width: 1280px; margin: 0 auto; padding: 0 2rem; }
  .nav-container { display: flex; align-items: center; justify-content: space-between; height: 84px; position: relative; }

  .logo { display: flex; align-items: center; gap: 12px; text-decoration: none; color: #FAFAF9; transition: transform 0.3s ease; }
  .logo:hover { transform: scale(1.02); }
  .logo-text { font-family: 'Playfair Display', serif; font-size: 26px; font-weight: 500; letter-spacing: -0.02em; background: linear-gradient(135deg, #FAFAF9 0%, #D4A373 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; }

  .nav-menu { display: flex; align-items: center; gap: 28px; }
  .nav-links { display: flex; gap: 32px; list-style: none; margin: 0; padding: 0; }
  .nav-item { position: relative; }
  .nav-link { position: relative; text-decoration: none; color: rgba(250, 250, 249, 0.85); font-weight: 500; font-size: 15px; letter-spacing: 0.01em; transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1); padding: 12px 0; overflow: hidden; display: flex; align-items: center; gap: 4px; }
  .dropdown-icon { width: 14px; height: 14px; opacity: 0.7; transition: all 0.3s ease; }
  .nav-item:hover .dropdown-icon { opacity: 1; transform: rotate(180deg); }
  .dropdown-menu { position: absolute; top: 100%; left: 0; background: rgba(20, 22, 24, 0.95); backdrop-filter: blur(32px) saturate(180%); border: 1px solid rgba(212, 163, 115, 0.15); border-radius: 12px; padding: 8px 0; min-width: 200px; box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3), 0 8px 32px rgba(0, 0, 0, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.05); opacity: 0; visibility: hidden; transform: translateY(-8px); transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1); z-index: 100; }
  .nav-item:hover .dropdown-menu { opacity: 1; visibility: visible; transform: translateY(0); }
  .dropdown-list { list-style: none; margin: 0; padding: 0; }
  .dropdown-link { display: block; padding: 12px 20px; color: rgba(250,250,249,0.8); text-decoration: none; font-size: 14px; font-weight: 500; transition: all 0.2s ease; border-radius: 8px; margin: 0 8px; }
  .dropdown-link:hover { background: rgba(212,163,115,0.1); color: #D4A373; }

  .nav-link::before { content: ''; position: absolute; bottom: -2px; left: 50%; width: 0; height: 2px; background: linear-gradient(90deg, #D4A373, #F59E0B, #EF4444); border-radius: 2px; transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1); transform: translateX(-50%); }
  .nav-link::after { content: ''; position: absolute; top: 0; left: -100%; width: 100%; height: 100%; background: linear-gradient(90deg, transparent, rgba(212, 163, 115, 0.05), transparent); transition: left 0.6s cubic-bezier(0.16, 1, 0.3, 1); }
  .nav-link:hover { color: #FAFAF9; transform: translateY(-1px); }
  .nav-link:hover::before { width: 100%; }
  .nav-link:hover::after { left: 100%; }

  /* Right actions */
  .nav-actions { display: flex; align-items: center; gap: 8px; }

  .contact-btn { position: relative; display: inline-flex; align-items: center; gap: 8px; background: rgba(212, 163, 115, 0.08); border: 1px solid rgba(212, 163, 115, 0.2); color: #FAFAF9; padding: 12px 16px; border-radius: 12px; font-weight: 600; font-size: 14px; letter-spacing: 0.02em; text-decoration: none; overflow: hidden; transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1); backdrop-filter: blur(8px); }
  .contact-btn:hover { border-color: rgba(212, 163, 115, 0.4); box-shadow: 0 8px 32px rgba(212, 163, 115, 0.2), 0 4px 16px rgba(0, 0, 0, 0.15); transform: translateY(-2px); }

  /* Cart icon-only control (no button look) */
  .cart-icon-link { position: relative; display: inline-grid; place-items: center; width: 42px; height: 42px; border-radius: 12px; text-decoration: none; color: #FAFAF9; }
  .cart-icon-link::after { content: ''; position: absolute; inset: 0; border-radius: 12px; background: radial-gradient(120% 120% at 30% 20%, rgba(212,163,115,0.12), transparent 60%); opacity: 0; transition: opacity .25s ease, box-shadow .25s ease; }
  .cart-icon { filter: drop-shadow(0 1px 0 rgba(0,0,0,.25)); opacity: .9; transition: transform .25s ease, opacity .25s ease; }
  .cart-icon-link:hover .cart-icon { transform: translateY(-1px); opacity: 1; }
  .cart-icon-link:hover::after { opacity: 1; }
  .cart-icon-link:focus-visible { outline: none; box-shadow: 0 0 0 2px rgba(212,163,115,.45); }
  .sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); border: 0; }

  .mobile-toggle { display: none; flex-direction: column; gap: 4px; background: none; border: none; cursor: pointer; padding: 8px; transition: transform 0.2s ease; }
  .mobile-toggle:hover { transform: scale(1.05); }
  .hamburger-line { width: 24px; height: 2px; background: #FAFAF9; border-radius: 2px; transition: all 0.3s ease; transform-origin: center; }
  .mobile-toggle.active .hamburger-line:nth-child(1) { transform: rotate(45deg) translate(6px, 6px); }
  .mobile-toggle.active .hamburger-line:nth-child(2) { opacity: 0; }
  .mobile-toggle.active .hamburger-line:nth-child(3) { transform: rotate(-45deg) translate(6px, -6px); }

  /* Mobile Menu (overlay) */
  .mobile-menu { position: fixed; top: 84px; left: 0; right: 0; bottom: 0; background: rgba(10, 11, 13, 0.98); backdrop-filter: blur(32px); transform: translateY(-100%); opacity: 0; visibility: hidden; transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1); z-index: 999; pointer-events: none; }
  .mobile-menu.active { transform: translateY(0); opacity: 1; visibility: visible; pointer-events: auto; z-index: 99999; }
  .mobile-menu-content { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; padding: 2rem; }
  .mobile-nav-links { list-style: none; margin: 0; padding: 0; display: flex; flex-direction: column; gap: 1rem; text-align: center; }
  .mobile-nav-item { display: flex; flex-direction: column; gap: 0.5rem; }
  .mobile-nav-link { font-family: 'Playfair Display', serif; font-size: 1.2rem; font-weight: 400; color: rgba(250, 250, 249, 0.85); text-decoration: none; transition: all 0.3s ease; position: relative; }
  .mobile-nav-link:hover { color: #D4A373; transform: scale(1.05); }
  .mobile-dropdown { display: flex; flex-direction: column; gap: 0.01rem; padding-top: 0.5rem; }
  .mobile-dropdown-link { font-family: 'Inter', sans-serif; font-size: 0.95rem; font-weight: 400; color: rgba(250, 250, 249, 0.7); text-decoration: none; transition: all 0.2s ease; padding: 0.25rem; }
  .mobile-dropdown-link:hover { color: #F59E0B; }

  .mobile-contact-btn { margin-top: 2rem; background: linear-gradient(135deg, #D4A373 0%, #F59E0B 100%); color: #0A0B0D; padding: 16px 32px; border-radius: 12px; font-weight: 700; font-size: 16px; text-decoration: none; transition: all 0.3s ease; box-shadow: 0 4px 20px rgba(212, 163, 115, 0.3); }
  .mobile-contact-btn:hover { transform: translateY(-2px); box-shadow: 0 8px 30px rgba(212, 163, 115, 0.4); }

  /* Responsive */
  @media (max-width: 1024px) { .nav-links { gap: 24px; } .nav-menu { gap: 12px; } }
  @media (max-width: 768px) {
    .container { padding: 0 1.5rem; }
    .nav-links { display: none; }
    .contact-btn { display: none; }
    .mobile-toggle { display: flex; }
    .nav-menu { gap: 8px; }
  }
  @media (max-width: 480px) {
    .container { padding: 0 1rem; }
    .nav-container { height: 74px; }
    .logo-text { font-size: 22px; }
    .mobile-nav-link { font-size: 1.5rem; }
    .mobile-menu { top: 74px; }
  }
</style>

<script>
  // Header scroll effect
  function handleScroll() {
    const header = document.getElementById('header');
    if (window.scrollY > 100) header?.classList.add('scrolled');
    else header?.classList.remove('scrolled');
  }

  // Open/close mobile menu
  function setOpen(open) {
    const mobileToggle = document.getElementById('mobile-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    if (!(mobileToggle && mobileMenu)) return;
    mobileToggle.classList.toggle('active', open);
    mobileToggle.setAttribute('aria-expanded', String(open));
    mobileMenu.classList.toggle('active', open);
    mobileMenu.setAttribute('aria-hidden', String(!open));
    document.documentElement.classList.toggle('menu-open', open);
    document.body.classList.toggle('menu-open', open);
  }

  function initMobileMenu() {
    const mobileToggle = document.getElementById('mobile-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    if (!(mobileToggle && mobileMenu)) return;
    mobileToggle.addEventListener('click', () => setOpen(!mobileMenu.classList.contains('active')));
    mobileMenu.addEventListener('click', (ev) => { const t = ev.target; if (t instanceof HTMLElement && t.closest('a')) setOpen(false); });
    window.addEventListener('resize', () => { if (window.innerWidth >= 1024) setOpen(false); });
  }

  document.addEventListener('DOMContentLoaded', () => { initMobileMenu(); handleScroll(); });
  window.addEventListener('scroll', handleScroll);
</script>

<style is:global>
  html.menu-open, body.menu-open { overflow: hidden; height: 100%; touch-action: none; }
</style>
