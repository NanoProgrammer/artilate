---
const { product } = Astro.props;
const { title, shortDescription, image, price, id } = product;
import ButtonProvider from './ButtonProvider.jsx';

// Calcular delay dinÃ¡micamente
let delay = '';
if(id == 1 ){
  delay = '0s';
}
else if  (id>1 && id <= 5) {
  delay = `${id * 0.135}s`;
} else {
  delay = `${5 * 0.135}s`; 
}

---

<a href={`/products/${id}`} class="hover:bg-[var(--color-5)] transition-colors ease-in-out duration-200">
  <div
    class="flex flex-col items-center gap-4 border-2 border-[var(--color-5)] rounded-lg p-4 fade-item"
    style={`animation-delay: ${delay};`}
  >
    <h2 class="text-2xl font-bold text-center" transition:name={`title-${id}`}>
      {title}
    </h2>
    <img
      src={image}
      alt={title}
      transition:name={`img-${id}`}
      class="w-56 h-auto max-h-[200px] object-cover rounded-lg border-2 border-[var(--color-1)]"
    />
    <p class="text-center max-w-46">{shortDescription}</p>
    <div class="flex flex-row items-center gap-4">
      <h2 class="text-center max-w-46">$ {price}</h2>
      <button class="bg-[var(--color-2)] text-white px-4 py-2 rounded-3xl hover:scale-105 transition-scale ease-in-out duration-200 cursor-pointer" >see more</button>
    </div>
  </div>
</a>

<style>
  img {
    transition: transform 0.3s ease-in-out;
  }

  img:hover {
    transform: scale(1.05);
  }

  .fade-item {
    opacity: 0;
    transform: translateY(10px);
    animation: fadeIn 0.3s ease-in-out forwards;
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
