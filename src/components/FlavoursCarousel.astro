---
/* src/components/FlavoursCarousel.astro */
const flavours = [
  { name: "Passion Fruit",       tag: "Tropical",   slug: "passion-fruit",      img: "/images/bonbons/passion-fruit.jpg",
    desc: "Real passion fruit purée in silky ganache. Bright, tart, clean finish." },
  { name: "Colombian Coffee",    tag: "Colombian",  slug: "colombian-coffee",   img: "/images/bonbons/colombian-coffee.jpg",
    desc: "Arabica extraction folded into dark ganache. Bold and aromatic." },
  { name: "Chocolate & Hazelnut",tag: "Classic",    slug: "chocolate-hazelnut", img: "/images/bonbons/choc-hazelnut.jpg",
    desc: "House hazelnut praliné with Colombian chocolate. Deep and elegant." },
  { name: "Pistachio",           tag: "Nutty",      slug: "pistachio",          img: "/images/bonbons/pistachio.jpg",
    desc: "Pure pistachio paste in white chocolate. Silky, nut-forward." },
  { name: "Dulce de Leche",      tag: "Caramelized",slug: "dulce-de-leche",     img: "/images/bonbons/dulce-de-leche.jpg",
    desc: "Slow-cooked milk caramel. Creamy texture; gentle sweetness." },
];
---

<section class="relative bg-[#0A0B0D] text-slate-50 py-8 lg:py-16">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <!-- Header -->
    <header class="mx-auto max-w-2xl text-center mb-12">
      <h2 class="font-serif text-[2rem] lg:text-[2.8rem] font-bold leading-tight reveal-up">
        Our <span class="bg-gradient-to-r from-amber-400 to-amber-600 bg-clip-text text-transparent">Signature Fillings</span>
      </h2>
      <p class="mt-1.5 text-[0.95rem] leading-relaxed text-slate-300 reveal-up" style="--d:1">
        Five hand-painted bonbon fillings. Image-forward, concise copy.
      </p>
    </header>

    <!-- Carrusel -->
    <div class="relative mt-6">
      <!-- Flechas SIEMPRE visibles -->
      <button
        id="prevBtn"
        aria-label="Previous"
        aria-controls="rail"
        disabled
        class="grid place-items-center absolute left-2 top-1/2 -translate-y-1/2 h-11 w-11 rounded-full border border-amber-500/20 bg-amber-500/10 text-amber-400 backdrop-blur hover:bg-amber-500/20 disabled:opacity-45 z-20 reveal-left"
        style="--d:2"
      >
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="15 18 9 12 15 6"/></svg>
      </button>
      <button
        id="nextBtn"
        aria-label="Next"
        aria-controls="rail"
        class="grid place-items-center absolute right-2 top-1/2 -translate-y-1/2 h-11 w-11 rounded-full border border-amber-500/20 bg-amber-500/10 text-amber-400 backdrop-blur hover:bg-amber-500/20 disabled:opacity-45 z-20 reveal-right"
        style="--d:2"
      >
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="9 6 15 12 9 18"/></svg>
      </button>

      <!-- Fades laterales -->
      <div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-slate-950 to-transparent z-10"></div>
      <div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-slate-950 to-transparent z-10"></div>

      <!-- Rail con scroll horizontal estilizado -->
      <div
        id="rail"
        class="styled-scroll flex gap-4 overflow-x-auto scroll-smooth snap-x snap-mandatory px-1 [-webkit-overflow-scrolling:touch] reveal-up"
        style="--d:1"
        tabindex="0"
        aria-label="Signature fillings carousel"
      >
        {flavours.map((f, i) => (
          <article
            class="card relative flex max-h-[70vh] min-w-[88%] flex-none snap-start flex-col overflow-hidden rounded-2xl border border-amber-500/15 bg-slate-900/60 backdrop-blur md:min-w-[74%] lg:min-w-[42%] xl:min-w-[30%] reveal-up"
            style={`--d:${i + 2}`}
          >
            <figure class="relative h-[55vh] min-h-[240px] w-full overflow-hidden border-b border-amber-500/10">
              <picture>
                <source srcset={f.img.replace(".jpg", ".avif")} type="image/avif" />
                <source srcset={f.img.replace(".jpg", ".webp")} type="image/webp" />
                <img
                  src={f.img}
                  alt={`${f.name} bonbon`}
                  loading="lazy"
                  decoding="async"
                  width="1200" height="800"
                  class="h-full w-full object-cover transition-transform duration-700 ease-out will-change-transform hover:scale-[1.04]"
                />
              </picture>
              <figcaption class="pointer-events-none absolute inset-0 flex items-start justify-end p-2">
                <span class="pointer-events-auto select-none rounded-full bg-gradient-to-br from-amber-400 to-amber-600 px-2.5 py-1 text-[0.72rem] font-bold text-slate-900 shadow-sm">
                  {f.tag}
                </span>
              </figcaption>
            </figure>
            <div class="grid gap-1.5 p-3">
              <h3 class="font-serif text-[1.05rem] leading-tight">{f.name}</h3>
              <p class="text-[0.95rem] leading-snug text-slate-300">{f.desc}</p>
            </div>
          </article>
        ))}
      </div>

      <!-- Dots -->
      <div id="dots" class="mt-3 flex justify-center gap-2 reveal-up" style="--d:2">
        {flavours.map((_, i) => (
          <button
            class={"h-2.5 w-2.5 rounded-full bg-amber-500/35 transition-transform " + (i === 0 ? "scale-125 bg-amber-400" : "")}
            data-i={i}
            aria-label={`Go to slide ${i + 1}`}
          />
        ))}
      </div>
    </div>
  </div>
</section>

<!-- CSS mínimo: estilo del scrollbar + reveals -->
<style is:global>
  .styled-scroll{
    scrollbar-width: thin;
    scrollbar-color: rgba(212,163,115,.55) transparent;
  }
  .styled-scroll::-webkit-scrollbar{ height: 10px; }
  .styled-scroll::-webkit-scrollbar-track{
    background: linear-gradient(to right, rgba(212,163,115,.06), rgba(212,163,115,0));
    border-radius: 999px;
  }
  .styled-scroll::-webkit-scrollbar-thumb{
    background: linear-gradient(135deg, #D4A373, #F59E0B);
    border-radius: 999px;
    border: 2px solid rgba(12,13,15,.6);
  }
  .styled-scroll::-webkit-scrollbar-thumb:hover{ filter: brightness(1.05); }

  /* ====== REVEALS globales coherentes con el sitio ====== */
  :root{
    --ease: cubic-bezier(.16,1,.3,1);
  }
  .reveal-up, .reveal-left, .reveal-right{
    opacity: 0;
    will-change: transform, opacity, filter;
    transition: opacity .7s var(--ease), transform .7s var(--ease), filter .7s var(--ease);
    transition-delay: calc(var(--d, 0) * 90ms);
    filter: blur(2px);
  }
  .reveal-up{ transform: translateY(18px) scale(.985); }
  .reveal-left{ transform: translateX(-22px); }
  .reveal-right{ transform: translateX(22px); }
  .is-visible{
    opacity: 1;
    transform: none;
    filter: none;
  }
  #rail{
    overflow-y: hidden;
  }
</style>

<script is:inline>
  // ====== Carrusel (tu lógica existente) ======
  const rail = document.getElementById('rail');
  const prev = document.getElementById('prevBtn');
  const next = document.getElementById('nextBtn');
  const dotsEl = document.getElementById('dots');
  const dots = Array.from(dotsEl?.querySelectorAll('button') || []);

  function stepSize() {
    const card = rail.querySelector('.card');
    if (!card) return rail.clientWidth;
    const gap = parseFloat(getComputedStyle(rail).gap || 0);
    return card.getBoundingClientRect().width + gap;
  }
  function go(dir) { rail.scrollBy({ left: dir * stepSize(), behavior: 'smooth' }); }

  function updateUI() {
    const w = stepSize() || 1;
    const i = Math.round(rail.scrollLeft / w);
    dots.forEach((d, k) => {
      d.classList.toggle('scale-125', k === i);
      d.classList.toggle('bg-amber-400', k === i);
      d.classList.toggle('bg-amber-500/35', k !== i);
    });
    prev.disabled = rail.scrollLeft <= 1;
    next.disabled = rail.scrollLeft + rail.clientWidth >= rail.scrollWidth - 1;
  }

  prev?.addEventListener('click', () => go(-1));
  next?.addEventListener('click', () => go(1));
  rail?.addEventListener('scroll', () => requestAnimationFrame(updateUI));
  window.addEventListener('resize', updateUI);
  dots.forEach((d, k) => d.addEventListener('click', () => {
    rail.scrollTo({ left: k * stepSize(), behavior: 'smooth' });
  }));

  updateUI();

  // ====== Animaciones de entrada (scroll reveal) ======
  (function initReveals(){
    const els = document.querySelectorAll('.reveal-up, .reveal-left, .reveal-right');
    if (!els.length) return;

    const io = new IntersectionObserver((entries) => {
      for (const e of entries) {
        if (e.isIntersecting) {
          e.target.classList.add('is-visible');
          io.unobserve(e.target);
        }
      }
    }, { root: null, threshold: 0.12, rootMargin: '0px 0px -8% 0px' });

    els.forEach(el => io.observe(el));
  })();
</script>
