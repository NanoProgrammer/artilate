---
// src/components/FlavoursCarousel.astro
const flavours = [
  { name: "Passion Fruit", tag: "Tropical", slug: "passion-fruit", img: "/images/bonbons/passion-fruit.jpg",
    desc: "Real passion fruit purée in silky ganache. Bright, tart, clean finish." },
  { name: "Colombian Coffee", tag: "Colombian", slug: "colombian-coffee", img: "/images/bonbons/colombian-coffee.jpg",
    desc: "Arabica extraction folded into dark ganache. Bold and aromatic." },
  { name: "Chocolate & Hazelnut", tag: "Classic", slug: "chocolate-hazelnut", img: "/images/bonbons/choc-hazelnut.jpg",
    desc: "House hazelnut praliné with Colombian chocolate. Deep and elegant." },
  { name: "Pistachio", tag: "Nutty", slug: "pistachio", img: "/images/bonbons/pistachio.jpg",
    desc: "Pure pistachio paste in white chocolate. Silky, nut-forward." },
  { name: "Dulce de Leche", tag: "Caramelized", slug: "dulce-de-leche", img: "/images/bonbons/dulce-de-leche.jpg",
    desc: "Slow-cooked milk caramel. Creamy texture; gentle sweetness." },
];
---

<section id="flavours" class="relative bg-[#0A0B0D] text-slate-50 scroll-mt-[84px] py-10 sm:py-12 lg:py-16">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <header class="mb-6 sm:mb-8 lg:mb-10 text-center">
      <p class="mb-2 text-[0.78rem] tracking-[0.22em] text-[#E3B86E]/80 font-semibold">FLAVOURS</p>
      <h2 class="font-serif font-bold leading-[1.08] text-[1.9rem] sm:text-[2.4rem] lg:text-[3rem]">
        Explore Our
        <span class="bg-gradient-to-br from-[#D4C3A3] to-[#E3B86E] bg-clip-text text-transparent">
          Cocoa Creations
        </span>
      </h2>
      <p class="mx-auto mt-2 max-w-3xl text-slate-300 text-[0.95rem]">
        Image-forward, clean copy, handcrafted fillings that highlight Colombian heritage.
      </p>
    </header>

    <!-- Carrusel -->
    <div class="relative">
      <!-- Flechas -->
      <button id="prevBtn" aria-label="Previous" aria-controls="rail"
        class="hidden sm:grid place-items-center absolute top-1/2 -translate-y-1/2 left-1 sm:left-2 h-9 w-9 rounded-full
               border border-[#D4C3A3]/25 bg-[#11131a]/60 text-[#E3B86E] backdrop-blur z-20
               hover:bg-[#151824]/70 hover:border-[#E3B86E]/40 disabled:opacity-40 disabled:pointer-events-none">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="15 18 9 12 15 6"/></svg>
      </button>
      <button id="nextBtn" aria-label="Next" aria-controls="rail"
        class="hidden sm:grid place-items-center absolute top-1/2 -translate-y-1/2 right-1 sm:right-2 h-9 w-9 rounded-full
               border border-[#D4C3A3]/25 bg-[#11131a]/60 text-[#E3B86E] backdrop-blur z-20
               hover:bg-[#151824]/70 hover:border-[#E3B86E]/40 disabled:opacity-40 disabled:pointer-events-none">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="9 6 15 12 9 18"/></svg>
      </button>

      <!-- Fades laterales -->
      <div class="pointer-events-none absolute inset-y-0 left-0 w-10 bg-gradient-to-r from-[#0A0B0D] to-transparent z-10"></div>
      <div class="pointer-events-none absolute inset-y-0 right-0 w-10 bg-gradient-to-l from-[#0A0B0D] to-transparent z-10"></div>

      <!-- Rail -->
      <div id="rail"
           class="flex gap-4 sm:gap-5 overflow-x-auto overflow-y-hidden px-1 scroll-smooth snap-x snap-mandatory
                  [-webkit-overflow-scrolling:touch] scrollbar-thin
                  [scrollbar-color:rgba(227,184,110,.55)_transparent]"
           tabindex="0" role="region" aria-roledescription="carousel" aria-label="Signature fillings carousel">
        {flavours.map((f) => (
          <article
            class="group relative flex flex-none flex-col overflow-hidden rounded-2xl
                   border border-[#D4C3A3]/15 bg-[#0E0F12]/80 backdrop-blur
                   hover:border-[#E3B86E]/30 hover:shadow-[0_0_0_1px_rgba(227,184,110,.12),0_18px_50px_-16px_rgba(227,184,110,.18)]
                   transition-all snap-start
                   min-w-[92%] xs:min-w-[86%] sm:min-w-[70%] md:min-w-[56%] lg:min-w-[44%] xl:min-w-[32%] 2xl:min-w-[28%]">
            <!-- media -->
            <figure class="relative w-full overflow-hidden border-b border-[#D4C3A3]/12">
              <picture>
                <source srcset={f.img.replace(".jpg", ".avif")} type="image/avif" />
                <source srcset={f.img.replace(".jpg", ".webp")} type="image/webp" />
                <img
                  src={f.img}
                  alt={`${f.name} bonbon`}
                  loading="lazy" decoding="async" width="1200" height="800"
                  class="w-full object-cover transition-transform duration-700 ease-out group-hover:scale-[1.03]
                         h-[clamp(220px,42vh,360px)] sm:h-[clamp(240px,40vh,380px)] md:h-[clamp(260px,36vh,420px)]
                         lg:h-[clamp(240px,32vh,380px)] xl:h-[clamp(220px,30vh,360px)]" />
              </picture>

              <!-- tag pill -->
              <figcaption class="pointer-events-none absolute inset-0 flex items-start justify-end p-2">
                <span class="pointer-events-auto select-none rounded-full
                             bg-gradient-to-br from-[#D4C3A3] to-[#E3B86E]
                             px-2.5 py-1 text-[0.72rem] font-bold text-[#0B0C0F] shadow-sm">
                  {f.tag}
                </span>
              </figcaption>
            </figure>

            <!-- copy -->
            <div class="grid gap-2 p-4 sm:p-5">
              <h3 class="font-serif text-[1.08rem] sm:text-[1.18rem] leading-tight">{f.name}</h3>
              <p class="text-[0.95rem] leading-snug text-slate-300">{f.desc}</p>
              <a href={`/product/${f.slug}`}
                 class="mt-1 inline-flex items-center gap-2 text-[#E3B86E] hover:text-[#F0CF98]">
                View details
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M5 12h14M12 5l7 7-7 7"/></svg>
              </a>
            </div>
          </article>
        ))}
      </div>

      <!-- Dots -->
      <div id="dots" class="mt-4 flex justify-center gap-2" role="tablist" aria-label="Carousel pagination">
        {flavours.map((_, i) => (
          <button
            class={"h-2.5 w-2.5 rounded-full bg-[#E3B86E]/30 transition-all " + (i === 0 ? "scale-110 bg-[#E3B86E]" : "")}
            data-i={i} role="tab" aria-selected={i === 0 ? "true" : "false"} aria-controls="rail"
            aria-label={`Go to slide ${i + 1}`} />
        ))}
      </div>
    </div>
  </div>
</section>

<script is:inline>
  const rail = document.getElementById('rail');
  const prev = document.getElementById('prevBtn');
  const next = document.getElementById('nextBtn');
  const dotsEl = document.getElementById('dots');
  const dots = Array.from(dotsEl?.querySelectorAll('button') || []);

  const getStep = () => {
    const card = rail?.querySelector('article');
    if (!rail || !card) return 0;
    const gap = parseFloat(getComputedStyle(rail).gap || '0');
    return card.getBoundingClientRect().width + gap;
  };

  const clamp = (n, min, max) => Math.max(min, Math.min(max, n));
  const go = (dir) => rail.scrollBy({ left: (getStep() || rail.clientWidth) * dir, behavior: 'smooth' });

  function updateUI(){
    const total = Math.max(0, (rail?.children.length || 1) - 1);
    const step = getStep() || 1;
    const i = clamp(Math.round(rail.scrollLeft / step), 0, total);
    dots.forEach((d,k) => {
      const on = k === i;
      d.style.transform = on ? 'scale(1.1)' : '';
      d.style.background = on ? '#E3B86E' : 'rgba(227,184,110,.30)';
      d.setAttribute('aria-selected', on ? 'true' : 'false');
    });
    if (prev && next) {
      prev.disabled = rail.scrollLeft <= 1;
      next.disabled = rail.scrollLeft + rail.clientWidth >= rail.scrollWidth - 1;
    }
  }

  prev?.addEventListener('click', () => go(-1));
  next?.addEventListener('click', () => go(1));
  rail?.addEventListener('scroll', () => requestAnimationFrame(updateUI));
  window.addEventListener('resize', updateUI);

  dots.forEach((d, k) => d.addEventListener('click', () => {
    const step = getStep() || rail.clientWidth;
    rail.scrollTo({ left: k * step, behavior: 'smooth' });
  }));

  rail?.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowRight') { e.preventDefault(); go(1); }
    if (e.key === 'ArrowLeft')  { e.preventDefault(); go(-1); }
  });

  if ('ResizeObserver' in window && rail){
    const ro = new ResizeObserver(updateUI);
    ro.observe(rail);
    Array.from(rail.children).forEach(el => ro.observe(el));
  }
  updateUI();
</script>

<style>
/* Scrollbar webkit (Firefox usa scrollbar-color en el contenedor) */
#rail::-webkit-scrollbar{ height:10px }
#rail::-webkit-scrollbar-track{
  background: linear-gradient(to right, rgba(212,195,163,.08), rgba(212,195,163,0));
  border-radius:999px
}
#rail::-webkit-scrollbar-thumb{
  background: linear-gradient(135deg, #D4C3A3, #E3B86E);
  border-radius:999px; border:2px solid rgba(12,13,15,.6)
}
#rail::-webkit-scrollbar-thumb:hover{ filter:brightness(1.03) }
</style>
